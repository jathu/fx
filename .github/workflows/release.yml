name: release
on:
  push:
    paths:
      - version.bzl
    branches:
      - master
jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      fx_version: ${{ env.FX_VERSION }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Setup Bazelisk
        uses: bazelbuild/setup-bazelisk@v1
      - name: Get the Release Version
        shell: bash
        run: |
          version=$(bazel run //src:version_emitter)
          echo "FX_VERSION=${version}" >> $GITHUB_ENV
          echo "fx version is: ${{ env.FX_VERSION }}"
      - name: Create GitHub Release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.FX_VERSION }}
          release_name: ${{ env.FX_VERSION }}
  build-release:
    name: build-release
    needs:
      - create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            platform: macos-x86
          - os: ubuntu-20.04
            platform: linux-x86
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Setup Bazelisk
        uses: bazelbuild/setup-bazelisk@v1
      - name: Build Package
        run: bazel build //:package --config release --platforms=//:${{ matrix.platform }}
      - name: Prepare Package
        shell: bash
        run: |
          package_name="fx-${{ needs.create-release.outputs.fx_version }}-${{ matrix.platform }}.tar"
          package_path="$(pwd)/bazel-bin/package.tar"

          echo "PACKAGE_NAME=$package_name" >> $GITHUB_ENV
          echo "PACKAGE_PATH=$package_path" >> $GITHUB_ENV
      - name: Upload Package
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_name: ${{ env.PACKAGE_NAME }}
          asset_path: ${{ env.PACKAGE_PATH }}
          asset_content_type: application/octet-stream
